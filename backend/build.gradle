plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.6'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.github.node-gradle.node' version '3.3.0'
}

group = 'com.student.management'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

node {
    version = '18.17.1' // Adjust to your desired Node.js version
    npmVersion = '9.8.1' // Adjust to your desired npm version
    download = true
    workDir = file('../frontend') // Adjust the frontend directory
    commandLine 'npm', 'install'
}

task buildFrontend(type: Exec) {
    workingDir '../frontend'
    commandLine 'npm', 'run', 'build', '--prod'
}

task copyFrontendToBackend(type: Copy) {
    dependsOn buildFrontend
    from '../frontend/dist'
    into './src/main/resources/static'
}

bootJar {
    dependsOn copyFrontendToBackend
}

